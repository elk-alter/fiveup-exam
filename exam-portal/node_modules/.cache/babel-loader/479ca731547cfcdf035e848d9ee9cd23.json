{"remainingRequest":"C:\\Users\\elk\\Documents\\GitHub\\fiveup-exam\\exam-portal\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\elk\\Documents\\GitHub\\fiveup-exam\\exam-portal\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\elk\\Documents\\GitHub\\fiveup-exam\\exam-portal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\elk\\Documents\\GitHub\\fiveup-exam\\exam-portal\\src\\views\\list\\modules\\StepByStepExamModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\elk\\Documents\\GitHub\\fiveup-exam\\exam-portal\\src\\views\\list\\modules\\StepByStepExamModal.vue","mtime":1619175233016},{"path":"C:\\Users\\elk\\Documents\\GitHub\\fiveup-exam\\exam-portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1617960720798},{"path":"C:\\Users\\elk\\Documents\\GitHub\\fiveup-exam\\exam-portal\\node_modules\\babel-loader\\lib\\index.js","mtime":1617960693405},{"path":"C:\\Users\\elk\\Documents\\GitHub\\fiveup-exam\\exam-portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1617960720798},{"path":"C:\\Users\\elk\\Documents\\GitHub\\fiveup-exam\\exam-portal\\node_modules\\vue-loader\\lib\\index.js","mtime":1617960721218}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport '../../../plugins/summernote';\nimport $ from 'jquery';\nimport { getExamQuestionTypeList, examCreate, examUpdate } from '../../../api/exam';\nvar stepForms = [['name', 'elapse', 'desc'], ['radioScore', 'checkScore', 'judgeScore'], ['option']];\nexport default {\n  name: 'StepByStepExamModal',\n  data: function data() {\n    return {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 7\n        }\n      },\n      size: 'default',\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 13\n        }\n      },\n      visible: false,\n      confirmLoading: false,\n      currentStep: 0,\n      mdl: {},\n      form: this.$form.createForm(this),\n      // 单选题对象列表\n      radios: [],\n      // 多选题对象列表\n      checks: [],\n      // 判断题对象列表\n      judges: []\n    };\n  },\n  updated: function updated() {\n    this.initSummernote();\n  },\n  methods: {\n    initSummernote: function initSummernote() {\n      console.log('初始化富文本插件');\n      $('#summernote-exam-avatar-create').summernote({\n        lang: 'zh-CN',\n        placeholder: '粘贴截图到这即可，图片最好不要大于80*80',\n        height: 200,\n        width: 320,\n        htmlMode: true,\n        toolbar: [],\n        fontSizes: ['8', '9', '10', '11', '12', '14', '18', '24', '36'],\n        fontNames: ['Arial', 'Arial Black', 'Comic Sans MS', 'Courier New', 'Helvetica Neue', 'Helvetica', 'Impact', 'Lucida Grande', 'Tahoma', 'Times New Roman', 'Verdana']\n      });\n    },\n    create: function create() {\n      var _this = this;\n\n      this.visible = true; // 从后端数据获取单选题、多选题和判断题的列表\n\n      getExamQuestionTypeList().then(function (res) {\n        console.log(res);\n\n        if (res.code === 0) {\n          console.log(res.data);\n          _this.radios = res.data.radios;\n          _this.checks = res.data.checks;\n          _this.judges = res.data.judges;\n        } else {\n          _this.$notification.error({\n            message: '获取问题列表失败',\n            description: res.msg\n          });\n        }\n      }).catch(function (err) {\n        // 失败就弹出警告消息\n        _this.$notification.error({\n          message: '获取问题列表失败',\n          description: err.message\n        });\n      });\n    },\n    popupScroll: function popupScroll() {\n      console.log('popupScroll');\n    },\n    handleNext: function handleNext(step) {\n      var _this2 = this;\n\n      // 处理下一步或者完成事件\n      var validateFields = this.form.validateFields;\n      var currentStep = step + 1;\n\n      if (currentStep <= 2) {\n        // stepForms\n        validateFields(stepForms[this.currentStep], function (errors, values) {\n          if (!errors) {\n            _this2.currentStep = currentStep;\n          }\n        });\n        return;\n      } // // last step，最后一步，代表完成考试编写，需要点击\"完成\"创建考试\n      // this.confirmLoading = true\n      // validateFields((errors, values) => { // values就是表单中校验的值，后面提交到后端接口时主要就是用这个values\n      //   values.avatar = $('#summernote-exam-avatar-create').summernote('code')\n      //   // 设置单选题、多选题和判断题的内容，但是提交前需要保证都已经被正确更新了\n      //   values.radios = this.radios\n      //   values.checks = this.checks\n      //   values.judges = this.judges\n      //   console.log('提交数据到后端')\n      //   this.confirmLoading = false\n      //   if (!errors) {\n      //     // 在这里把创建的考试的内容(存放在values中)提交给后端接口，需要的参数都已经封装成values这个json啦\n      //     console.log('values:', values)\n      //     // 把data中的question属性提交到后端，待写完后端接口.把前端的创建的题型提交到后端\n      //     examCreate(values).then(res => {\n      //       // 成功就跳转到结果页面\n      //       console.log(res)\n      //       if (res.code === 0) {\n      //         this.$notification.success({\n      //           message: '创建成功',\n      //           description: '考试创建成功'\n      //         })\n      //         // 关闭弹出框\n      //         this.visible = false\n      //         this.$emit('ok')\n      //       }\n      //     }).catch(err => {\n      //       // 失败就弹出警告消息\n      //       this.$notification.error({\n      //         message: '考试创建失败',\n      //         description: err.message\n      //       })\n      //     })\n      //   } else {\n      //     this.confirmLoading = false\n      //   }\n      // })\n      // last step，最后一步，代表完成考试编写，需要点击\"完成\"创建考试\n\n\n      this.confirmLoading = true;\n      console.log('提交数据到后端');\n      this.confirmLoading = false;\n      this.exam.name = this.name;\n      this.exam.elapse = this.elapse;\n      this.exam.desc = this.desc;\n      this.exam.avatar = this.avatar;\n      this.exam.radioScore = this.radioScore;\n      this.exam.checkScore = this.checkScore;\n      this.exam.judgeScore = this.judgeScore; // 设置单选题、多选题和判断题的内容，但是提交前需要保证都已经被正确更新了\n\n      this.exam.radios = this.radios;\n      this.exam.checks = this.checks;\n      this.exam.judges = this.judges;\n      console.log('radios:' + this.exam.radios);\n      console.log('checks:' + this.exam.checks);\n      console.log('judges:' + this.exam.judges);\n      var that = this;\n      examUpdate(that.exam).then(function (res) {\n        // 成功就跳转到结果页面\n        console.log(res);\n\n        if (res.code === 0) {\n          that.$notification.success({\n            message: '更新成功',\n            description: '考试更新成功'\n          }); // 关闭弹出框\n\n          that.visible = false;\n          that.currentStep = 0;\n          that.$emit('ok');\n        }\n      }).catch(function (err) {\n        // 失败就弹出警告消息\n        that.$notification.error({\n          message: '考试更新失败',\n          description: err.message\n        });\n      });\n    },\n    backward: function backward() {\n      this.currentStep--;\n    },\n    handleCancel: function handleCancel() {\n      // clear form & currentStep\n      this.visible = false;\n      this.currentStep = 0;\n    },\n    // 改变选择的题目列表,这里需要分单选、多选和判断进行单独更新，下面的代码要针对radios、checks和judges分别适配\n    handleRadioChange: function handleRadioChange(values) {\n      console.log(values); // 更新单选题的信息\n\n      for (var i = 0; i < this.radios.length; i++) {\n        // 遍历所有的题目的选项\n        // 取出一个选项的id\n        var name = this.radios[i].name; // 当前问题是否被问题创建者选中\n\n        var checked = false;\n\n        for (var j = 0; j < values.length; j++) {\n          // 拿着\n          var value = values[j];\n\n          if (name === value) {\n            // 说明这个问题被考试创建者选中\n            checked = true;\n            this.radios[i].checked = true;\n            break; // 跳出内部的for循环\n          }\n        } // 这个选项遍历到最后，发现还不是答案(不在答案数组中)，那么就把这个选项的answer属性设置为false\n\n\n        if (checked === false) {\n          this.radios[i].checked = false;\n        }\n      }\n    },\n    // 更新多选题信息\n    handleCheckChange: function handleCheckChange(values) {\n      console.log(values); // 更新单选题的信息\n\n      for (var i = 0; i < this.checks.length; i++) {\n        // 遍历所有的题目的选项\n        // 取出一个选项的id\n        var name = this.checks[i].name; // 当前问题是否被问题创建者选中\n\n        var checked = false;\n\n        for (var j = 0; j < values.length; j++) {\n          // 拿着\n          var value = values[j];\n\n          if (name === value) {\n            // 说明这个问题被考试创建者选中\n            checked = true;\n            this.checks[i].checked = true;\n            break; // 跳出内部的for循环\n          }\n        } // 这个选项遍历到最后，发现还不是答案(不在答案数组中)，那么就把这个选项的answer属性设置为false\n\n\n        if (checked === false) {\n          this.checks[i].checked = false;\n        }\n      }\n    },\n    // 更新判断题信息\n    handleJudgeChange: function handleJudgeChange(values) {\n      console.log(values); // 更新单选题的信息\n\n      for (var i = 0; i < this.judges.length; i++) {\n        // 遍历所有的题目的选项\n        // 取出一个选项的id\n        var name = this.judges[i].name; // 当前问题是否被问题创建者选中\n\n        var checked = false;\n\n        for (var j = 0; j < values.length; j++) {\n          // 拿着\n          var value = values[j];\n\n          if (name === value) {\n            // 说明这个问题被考试创建者选中\n            checked = true;\n            this.judges[i].checked = true;\n            break; // 跳出内部的for循环\n          }\n        } // 这个选项遍历到最后，发现还不是答案(不在答案数组中)，那么就把这个选项的answer属性设置为false\n\n\n        if (checked === false) {\n          this.judges[i].checked = false;\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["StepByStepExamModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <a-modal\r\n    title=\"创建考试\"\r\n    :width=\"640\"\r\n    :visible=\"visible\"\r\n    :confirmLoading=\"confirmLoading\"\r\n    @cancel=\"handleCancel\"\r\n  >\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-steps :current=\"currentStep\" :style=\"{ marginBottom: '28px' }\" size=\"small\">\r\n        <a-step title=\"考试描述\"/>\r\n        <a-step title=\"每题分数\"/>\r\n        <a-step title=\"选择题目\"/>\r\n      </a-steps>\r\n      <a-form :form=\"form\">\r\n        <!-- step1 -->\r\n        <div v-show=\"currentStep === 0\">\r\n          <a-form-item\r\n            label=\"考试名称\"\r\n            :labelCol=\"labelCol\"\r\n            :wrapperCol=\"wrapperCol\"\r\n          >\r\n            <a-input v-decorator=\"['name', {rules: [{required: true}]}]\"/>\r\n          </a-form-item>\r\n          <a-form-item\r\n            label=\"考试限时\"\r\n            :labelCol=\"labelCol\"\r\n            :wrapperCol=\"wrapperCol\"\r\n          >\r\n            <a-input-number\r\n              :min=\"1\"\r\n              :max=\"200\"\r\n              v-decorator=\"['elapse', {initialValue: '90',rules: [{required: true}]}]\"\r\n            />\r\n            分钟\r\n          </a-form-item>\r\n          <a-form-item\r\n            label=\"考试简述\"\r\n            :labelCol=\"labelCol\"\r\n            :wrapperCol=\"wrapperCol\"\r\n          >\r\n            <a-textarea :rows=\"2\" v-decorator=\"['desc', {rules: [{required: true}]}]\"></a-textarea>\r\n          </a-form-item>\r\n          <a-form-item\r\n            label=\"考试封面\"\r\n            :labelCol=\"labelCol\"\r\n            :wrapperCol=\"wrapperCol\"\r\n          >\r\n            <!-- 创建考试的时候传入的图片 -->\r\n            <div id=\"summernote-exam-avatar-create\"></div>\r\n          </a-form-item>\r\n        </div>\r\n        <div v-show=\"currentStep === 1\">\r\n          <a-form-item\r\n            label=\"单选题\"\r\n            :labelCol=\"labelCol\"\r\n            :wrapperCol=\"wrapperCol\"\r\n          >\r\n            <a-input-number\r\n              :min=\"1\"\r\n              :max=\"20\"\r\n              v-decorator=\"['radioScore', {initialValue: '5',rules: [{required: true}]}]\"\r\n            />\r\n            分\r\n          </a-form-item>\r\n\r\n          <a-form-item\r\n            label=\"多选题\"\r\n            :labelCol=\"labelCol\"\r\n            :wrapperCol=\"wrapperCol\"\r\n          >\r\n            <a-input-number\r\n              :min=\"1\"\r\n              :max=\"20\"\r\n              v-decorator=\"['checkScore', {initialValue: '5',rules: [{required: true}]}]\"\r\n            />\r\n            分\r\n          </a-form-item>\r\n\r\n          <a-form-item\r\n            label=\"判断题\"\r\n            :labelCol=\"labelCol\"\r\n            :wrapperCol=\"wrapperCol\"\r\n          >\r\n            <a-input-number\r\n              :min=\"1\"\r\n              :max=\"20\"\r\n              v-decorator=\"['judgeScore', {initialValue: '5',rules: [{required: true}]}]\"\r\n            />\r\n            分\r\n          </a-form-item>\r\n        </div>\r\n\r\n        <div v-show=\"currentStep === 2\">\r\n          <a-form-item\r\n            label=\"选择单选题\"\r\n            :labelCol=\"labelCol\"\r\n            :wrapperCol=\"wrapperCol\"\r\n            enterButton=\"Search\"\r\n          >\r\n            <!-- 单选 -->\r\n            <a-select\r\n              mode=\"multiple\"\r\n              :size=\"size\"\r\n              placeholder=\"请选择单选题\"\r\n              style=\"width: 100%\"\r\n              @popupScroll=\"popupScroll\"\r\n              @change=\"handleRadioChange\"\r\n            >\r\n              <a-select-option v-for=\"radio in radios\" :value=\"radio.name\" :key=\"radio.id\">\r\n                {{ radio.name }}\r\n              </a-select-option>\r\n            </a-select>\r\n          </a-form-item>\r\n\r\n          <a-form-item\r\n            label=\"选择多选题\"\r\n            :labelCol=\"labelCol\"\r\n            :wrapperCol=\"wrapperCol\"\r\n            enterButton=\"Search\"\r\n          >\r\n            <!-- 多选 -->\r\n            <a-select\r\n              mode=\"multiple\"\r\n              :size=\"size\"\r\n              placeholder=\"请选择多选题\"\r\n              style=\"width: 100%\"\r\n              @popupScroll=\"popupScroll\"\r\n              @change=\"handleCheckChange\"\r\n            >\r\n              <a-select-option v-for=\"check in checks\" :value=\"check.name\" :key=\"check.id\">\r\n                {{ check.name }}\r\n              </a-select-option>\r\n            </a-select>\r\n          </a-form-item>\r\n\r\n          <a-form-item\r\n            label=\"选择判断题\"\r\n            :labelCol=\"labelCol\"\r\n            :wrapperCol=\"wrapperCol\"\r\n            enterButton=\"Search\"\r\n          >\r\n            <!-- 判断 -->\r\n            <a-select\r\n              mode=\"multiple\"\r\n              :size=\"size\"\r\n              placeholder=\"请选择判断题\"\r\n              style=\"width: 100%\"\r\n              @popupScroll=\"popupScroll\"\r\n              @change=\"handleJudgeChange\"\r\n            >\r\n              <a-select-option v-for=\"judge in judges\" :value=\"judge.name\" :key=\"judge.id\">\r\n                {{ judge.name }}\r\n              </a-select-option>\r\n            </a-select>\r\n          </a-form-item>\r\n        </div>\r\n      </a-form>\r\n    </a-spin>\r\n    <template slot=\"footer\">\r\n      <a-button key=\"back\" @click=\"backward\" v-if=\"currentStep > 0\" :style=\"{ float: 'left' }\">上一步</a-button>\r\n      <a-button key=\"cancel\" @click=\"handleCancel\">取消</a-button>\r\n      <a-button key=\"forward\" :loading=\"confirmLoading\" type=\"primary\" @click=\"handleNext(currentStep)\">\r\n        {{ currentStep === 2 && '完成' || '下一步' }}\r\n      </a-button>\r\n    </template>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\nimport '../../../plugins/summernote'\r\nimport $ from 'jquery'\r\nimport { getExamQuestionTypeList, examCreate, examUpdate } from '../../../api/exam'\r\n\r\nconst stepForms = [\r\n  ['name', 'elapse', 'desc'],\r\n  ['radioScore', 'checkScore', 'judgeScore'],\r\n  ['option']\r\n]\r\n\r\nexport default {\r\n  name: 'StepByStepExamModal',\r\n  data () {\r\n    return {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 7 }\r\n      },\r\n      size: 'default',\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 13 }\r\n      },\r\n      visible: false,\r\n      confirmLoading: false,\r\n      currentStep: 0,\r\n      mdl: {},\r\n\r\n      form: this.$form.createForm(this),\r\n      // 单选题对象列表\r\n      radios: [],\r\n      // 多选题对象列表\r\n      checks: [],\r\n      // 判断题对象列表\r\n      judges: []\r\n    }\r\n  },\r\n  updated () {\r\n    this.initSummernote()\r\n  },\r\n  methods: {\r\n    initSummernote () {\r\n      console.log('初始化富文本插件')\r\n      $('#summernote-exam-avatar-create').summernote({\r\n        lang: 'zh-CN',\r\n        placeholder: '粘贴截图到这即可，图片最好不要大于80*80',\r\n        height: 200,\r\n        width: 320,\r\n        htmlMode: true,\r\n        toolbar: [],\r\n        fontSizes: ['8', '9', '10', '11', '12', '14', '18', '24', '36'],\r\n        fontNames: [\r\n          'Arial', 'Arial Black', 'Comic Sans MS', 'Courier New',\r\n          'Helvetica Neue', 'Helvetica', 'Impact', 'Lucida Grande',\r\n          'Tahoma', 'Times New Roman', 'Verdana'\r\n        ]\r\n      })\r\n    },\r\n    create () {\r\n      this.visible = true\r\n      // 从后端数据获取单选题、多选题和判断题的列表\r\n      getExamQuestionTypeList().then(res => {\r\n        console.log(res)\r\n        if (res.code === 0) {\r\n          console.log(res.data)\r\n          this.radios = res.data.radios\r\n          this.checks = res.data.checks\r\n          this.judges = res.data.judges\r\n        } else {\r\n          this.$notification.error({\r\n            message: '获取问题列表失败',\r\n            description: res.msg\r\n          })\r\n        }\r\n      }).catch(err => {\r\n        // 失败就弹出警告消息\r\n        this.$notification.error({\r\n          message: '获取问题列表失败',\r\n          description: err.message\r\n        })\r\n      })\r\n    },\r\n    popupScroll () {\r\n      console.log('popupScroll')\r\n    },\r\n    handleNext (step) {\r\n      // 处理下一步或者完成事件\r\n      const { form: { validateFields } } = this\r\n      const currentStep = step + 1\r\n      if (currentStep <= 2) {\r\n        // stepForms\r\n        validateFields(stepForms[this.currentStep], (errors, values) => {\r\n          if (!errors) {\r\n            this.currentStep = currentStep\r\n          }\r\n        })\r\n        return\r\n      }\r\n      // // last step，最后一步，代表完成考试编写，需要点击\"完成\"创建考试\r\n      // this.confirmLoading = true\r\n      // validateFields((errors, values) => { // values就是表单中校验的值，后面提交到后端接口时主要就是用这个values\r\n      //   values.avatar = $('#summernote-exam-avatar-create').summernote('code')\r\n      //   // 设置单选题、多选题和判断题的内容，但是提交前需要保证都已经被正确更新了\r\n      //   values.radios = this.radios\r\n      //   values.checks = this.checks\r\n      //   values.judges = this.judges\r\n      //   console.log('提交数据到后端')\r\n      //   this.confirmLoading = false\r\n      //   if (!errors) {\r\n      //     // 在这里把创建的考试的内容(存放在values中)提交给后端接口，需要的参数都已经封装成values这个json啦\r\n      //     console.log('values:', values)\r\n      //     // 把data中的question属性提交到后端，待写完后端接口.把前端的创建的题型提交到后端\r\n      //     examCreate(values).then(res => {\r\n      //       // 成功就跳转到结果页面\r\n      //       console.log(res)\r\n      //       if (res.code === 0) {\r\n      //         this.$notification.success({\r\n      //           message: '创建成功',\r\n      //           description: '考试创建成功'\r\n      //         })\r\n      //         // 关闭弹出框\r\n      //         this.visible = false\r\n      //         this.$emit('ok')\r\n      //       }\r\n      //     }).catch(err => {\r\n      //       // 失败就弹出警告消息\r\n      //       this.$notification.error({\r\n      //         message: '考试创建失败',\r\n      //         description: err.message\r\n      //       })\r\n      //     })\r\n      //   } else {\r\n      //     this.confirmLoading = false\r\n      //   }\r\n      // })\r\n      // last step，最后一步，代表完成考试编写，需要点击\"完成\"创建考试\r\n      this.confirmLoading = true\r\n      console.log('提交数据到后端')\r\n      this.confirmLoading = false\r\n      this.exam.name = this.name\r\n      this.exam.elapse = this.elapse\r\n      this.exam.desc = this.desc\r\n      this.exam.avatar = this.avatar\r\n      this.exam.radioScore = this.radioScore\r\n      this.exam.checkScore = this.checkScore\r\n      this.exam.judgeScore = this.judgeScore\r\n      // 设置单选题、多选题和判断题的内容，但是提交前需要保证都已经被正确更新了\r\n      this.exam.radios = this.radios\r\n      this.exam.checks = this.checks\r\n      this.exam.judges = this.judges\r\n      console.log('radios:' + this.exam.radios)\r\n      console.log('checks:' + this.exam.checks)\r\n      console.log('judges:' + this.exam.judges)\r\n      const that = this\r\n      examUpdate(that.exam).then(res => {\r\n        // 成功就跳转到结果页面\r\n        console.log(res)\r\n        if (res.code === 0) {\r\n          that.$notification.success({\r\n            message: '更新成功',\r\n            description: '考试更新成功'\r\n          })\r\n          // 关闭弹出框\r\n          that.visible = false\r\n          that.currentStep = 0\r\n          that.$emit('ok')\r\n        }\r\n      }).catch(err => {\r\n        // 失败就弹出警告消息\r\n        that.$notification.error({\r\n          message: '考试更新失败',\r\n          description: err.message\r\n        })\r\n      })\r\n    },\r\n    backward () {\r\n      this.currentStep--\r\n    },\r\n    handleCancel () {\r\n      // clear form & currentStep\r\n      this.visible = false\r\n      this.currentStep = 0\r\n    },\r\n    // 改变选择的题目列表,这里需要分单选、多选和判断进行单独更新，下面的代码要针对radios、checks和judges分别适配\r\n    handleRadioChange (values) {\r\n      console.log(values)\r\n      // 更新单选题的信息\r\n      for (let i = 0; i < this.radios.length; i++) { // 遍历所有的题目的选项\r\n        // 取出一个选项的id\r\n        const name = this.radios[i].name\r\n        // 当前问题是否被问题创建者选中\r\n        let checked = false\r\n        for (let j = 0; j < values.length; j++) { // 拿着\r\n          const value = values[j]\r\n          if (name === value) {\r\n            // 说明这个问题被考试创建者选中\r\n            checked = true\r\n            this.radios[i].checked = true\r\n            break // 跳出内部的for循环\r\n          }\r\n        }\r\n        // 这个选项遍历到最后，发现还不是答案(不在答案数组中)，那么就把这个选项的answer属性设置为false\r\n        if (checked === false) {\r\n          this.radios[i].checked = false\r\n        }\r\n      }\r\n    },\r\n\r\n    // 更新多选题信息\r\n    handleCheckChange (values) {\r\n      console.log(values)\r\n      // 更新单选题的信息\r\n      for (let i = 0; i < this.checks.length; i++) { // 遍历所有的题目的选项\r\n        // 取出一个选项的id\r\n        const name = this.checks[i].name\r\n        // 当前问题是否被问题创建者选中\r\n        let checked = false\r\n        for (let j = 0; j < values.length; j++) { // 拿着\r\n          const value = values[j]\r\n          if (name === value) {\r\n            // 说明这个问题被考试创建者选中\r\n            checked = true\r\n            this.checks[i].checked = true\r\n            break // 跳出内部的for循环\r\n          }\r\n        }\r\n        // 这个选项遍历到最后，发现还不是答案(不在答案数组中)，那么就把这个选项的answer属性设置为false\r\n        if (checked === false) {\r\n          this.checks[i].checked = false\r\n        }\r\n      }\r\n    },\r\n\r\n    // 更新判断题信息\r\n    handleJudgeChange (values) {\r\n      console.log(values)\r\n      // 更新单选题的信息\r\n      for (let i = 0; i < this.judges.length; i++) { // 遍历所有的题目的选项\r\n        // 取出一个选项的id\r\n        const name = this.judges[i].name\r\n        // 当前问题是否被问题创建者选中\r\n        let checked = false\r\n        for (let j = 0; j < values.length; j++) { // 拿着\r\n          const value = values[j]\r\n          if (name === value) {\r\n            // 说明这个问题被考试创建者选中\r\n            checked = true\r\n            this.judges[i].checked = true\r\n            break // 跳出内部的for循环\r\n          }\r\n        }\r\n        // 这个选项遍历到最后，发现还不是答案(不在答案数组中)，那么就把这个选项的answer属性设置为false\r\n        if (checked === false) {\r\n          this.judges[i].checked = false\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/list/modules"}]}