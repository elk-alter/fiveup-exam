{"remainingRequest":"C:\\Users\\elk\\Documents\\GitHub\\exam-vue\\exam-portal\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\elk\\Documents\\GitHub\\exam-vue\\exam-portal\\src\\components\\Table\\index.js","dependencies":[{"path":"C:\\Users\\elk\\Documents\\GitHub\\exam-vue\\exam-portal\\src\\components\\Table\\index.js","mtime":1617959933225},{"path":"C:\\Users\\elk\\Documents\\GitHub\\exam-vue\\exam-portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1617960720798},{"path":"C:\\Users\\elk\\Documents\\GitHub\\exam-vue\\exam-portal\\node_modules\\babel-loader\\lib\\index.js","mtime":1617960693405}],"contextDependencies":[],"result":["import _mergeJSXProps from \"@vue/babel-helper-vue-jsx-merge-props\";\nimport _Object$keys from \"C:\\\\Users\\\\elk\\\\Documents\\\\GitHub\\\\exam-vue\\\\exam-portal\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _typeof from \"C:\\\\Users\\\\elk\\\\Documents\\\\GitHub\\\\exam-vue\\\\exam-portal\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _parseInt from \"C:\\\\Users\\\\elk\\\\Documents\\\\GitHub\\\\exam-vue\\\\exam-portal\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/parse-int\";\nimport \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"C:\\\\Users\\\\elk\\\\Documents\\\\GitHub\\\\exam-vue\\\\exam-portal\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _Object$assign from \"C:\\\\Users\\\\elk\\\\Documents\\\\GitHub\\\\exam-vue\\\\exam-portal\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport T from 'ant-design-vue/es/table/Table';\nimport get from 'lodash.get';\nexport default {\n  data: function data() {\n    return {\n      needTotalList: [],\n      selectedRows: [],\n      selectedRowKeys: [],\n      localLoading: false,\n      localDataSource: [],\n      localPagination: _Object$assign({}, this.pagination)\n    };\n  },\n  props: _Object$assign({}, T.props, {\n    rowKey: {\n      type: [String, Function],\n      default: 'key'\n    },\n    data: {\n      type: Function,\n      required: true\n    },\n    pageNum: {\n      type: Number,\n      default: 1\n    },\n    pageSize: {\n      type: Number,\n      default: 10\n    },\n    showSizeChanger: {\n      type: Boolean,\n      default: true\n    },\n    size: {\n      type: String,\n      default: 'default'\n    },\n\n    /**\r\n     * alert: {\r\n     *   show: true,\r\n     *   clear: Function\r\n     * }\r\n     */\n    alert: {\n      type: [Object, Boolean],\n      default: null\n    },\n    rowSelection: {\n      type: Object,\n      default: null\n    },\n\n    /** @Deprecated */\n    showAlertInfo: {\n      type: Boolean,\n      default: false\n    },\n    showPagination: {\n      type: String | Boolean,\n      default: 'auto'\n    },\n\n    /**\r\n     * enable page URI mode\r\n     *\r\n     * e.g:\r\n     * /users/1\r\n     * /users/2\r\n     * /users/3?queryParam=test\r\n     * ...\r\n     */\n    pageURI: {\n      type: Boolean,\n      default: false\n    }\n  }),\n  watch: {\n    'localPagination.current': function localPaginationCurrent(val) {\n      this.pageURI && this.$router.push(_objectSpread({}, this.$route, {\n        name: this.$route.name,\n        params: _Object$assign({}, this.$route.params, {\n          pageNo: val\n        })\n      }));\n    },\n    pageNum: function pageNum(val) {\n      _Object$assign(this.localPagination, {\n        current: val\n      });\n    },\n    pageSize: function pageSize(val) {\n      _Object$assign(this.localPagination, {\n        pageSize: val\n      });\n    },\n    showSizeChanger: function showSizeChanger(val) {\n      _Object$assign(this.localPagination, {\n        showSizeChanger: val\n      });\n    }\n  },\n  created: function created() {\n    var pageNo = this.$route.params.pageNo;\n    var localPageNum = this.pageURI && pageNo && _parseInt(pageNo) || this.pageNum;\n    this.localPagination = ['auto', true].includes(this.showPagination) && _Object$assign({}, this.localPagination, {\n      current: localPageNum,\n      pageSize: this.pageSize,\n      showSizeChanger: this.showSizeChanger\n    });\n    this.needTotalList = this.initTotalList(this.columns);\n    this.loadData();\n  },\n  methods: {\n    /**\r\n     * 表格重新加载方法\r\n     * 如果参数为 true, 则强制刷新到第一页\r\n     * @param Boolean bool\r\n     */\n    refresh: function refresh() {\n      var bool = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      bool && (this.localPagination = _Object$assign({}, {\n        current: 1,\n        pageSize: this.pageSize\n      }));\n      this.loadData();\n    },\n\n    /**\r\n     * 加载数据方法\r\n     * @param {Object} pagination 分页选项器\r\n     * @param {Object} filters 过滤条件\r\n     * @param {Object} sorter 排序条件\r\n     */\n    loadData: function loadData(pagination, filters, sorter) {\n      var _this = this;\n\n      this.localLoading = true;\n\n      var parameter = _Object$assign({\n        pageNo: pagination && pagination.current || this.localPagination.current || this.pageNum,\n        pageSize: pagination && pagination.pageSize || this.localPagination.pageSize || this.pageSize\n      }, sorter && sorter.field && {\n        sortField: sorter.field\n      } || {}, sorter && sorter.order && {\n        sortOrder: sorter.order\n      } || {}, _objectSpread({}, filters));\n\n      var result = this.data(parameter); // 对接自己的通用数据接口需要修改下方代码中的 r.pageNo, r.totalCount, r.data\n      // eslint-disable-next-line\n\n      if ((_typeof(result) === 'object' || typeof result === 'function') && typeof result.then === 'function') {\n        result.then(function (r) {\n          _this.localPagination = _Object$assign({}, _this.localPagination, {\n            current: r.pageNo,\n            // 返回结果中的当前分页数\n            total: r.totalCount,\n            // 返回结果中的总记录数\n            showSizeChanger: _this.showSizeChanger,\n            pageSize: pagination && pagination.pageSize || _this.localPagination.pageSize\n          }); // 为防止删除数据后导致页面当前页面数据长度为 0 ,自动翻页到上一页\n\n          if (r.data.length === 0 && _this.localPagination.current > 1) {\n            _this.localPagination.current--;\n\n            _this.loadData();\n\n            return;\n          } // 这里用于判断接口是否有返回 r.totalCount 或 this.showPagination = false\n          // 当情况满足时，表示数据不满足分页大小，关闭 table 分页功能\n\n\n          (!_this.showPagination || !r.totalCount && _this.showPagination === 'auto') && (_this.localPagination.hideOnSinglePage = true);\n          _this.localDataSource = r.data; // 返回结果中的数组数据\n\n          _this.localLoading = false;\n        });\n      }\n    },\n    initTotalList: function initTotalList(columns) {\n      var totalList = [];\n      columns && columns instanceof Array && columns.forEach(function (column) {\n        if (column.needTotal) {\n          totalList.push(_objectSpread({}, column, {\n            total: 0\n          }));\n        }\n      });\n      return totalList;\n    },\n\n    /**\r\n     * 用于更新已选中的列表数据 total 统计\r\n     * @param selectedRowKeys\r\n     * @param selectedRows\r\n     */\n    updateSelect: function updateSelect(selectedRowKeys, selectedRows) {\n      this.selectedRows = selectedRows;\n      this.selectedRowKeys = selectedRowKeys;\n      var list = this.needTotalList;\n      this.needTotalList = list.map(function (item) {\n        return _objectSpread({}, item, {\n          total: selectedRows.reduce(function (sum, val) {\n            var total = sum + _parseInt(get(val, item.dataIndex));\n\n            return isNaN(total) ? 0 : total;\n          }, 0)\n        });\n      });\n    },\n\n    /**\r\n     * 清空 table 已选中项\r\n     */\n    clearSelected: function clearSelected() {\n      if (this.rowSelection) {\n        this.rowSelection.onChange([], []);\n        this.updateSelect([], []);\n      }\n    },\n\n    /**\r\n     * 处理交给 table 使用者去处理 clear 事件时，内部选中统计同时调用\r\n     * @param callback\r\n     * @returns {*}\r\n     */\n    renderClear: function renderClear(callback) {\n      var _this2 = this;\n\n      var h = this.$createElement;\n      if (this.selectedRowKeys.length <= 0) return null;\n      return h(\"a\", {\n        \"style\": \"margin-left: 24px\",\n        \"on\": {\n          \"click\": function click() {\n            callback();\n\n            _this2.clearSelected();\n          }\n        }\n      }, [\"\\u6E05\\u7A7A\"]);\n    },\n    renderAlert: function renderAlert() {\n      var h = this.$createElement;\n      // 绘制统计列数据\n      var needTotalItems = this.needTotalList.map(function (item) {\n        return h(\"span\", {\n          \"style\": \"margin-right: 12px\"\n        }, [item.title, \"\\u603B\\u8BA1 \", h(\"a\", {\n          \"style\": \"font-weight: 600\"\n        }, [!item.customRender ? item.total : item.customRender(item.total)])]);\n      }); // 绘制 清空 按钮\n\n      var clearItem = typeof this.alert.clear === 'boolean' && this.alert.clear ? this.renderClear(this.clearSelected) : this.alert !== null && typeof this.alert.clear === 'function' ? this.renderClear(this.alert.clear) : null; // 绘制 alert 组件\n\n      return h(\"a-alert\", {\n        \"attrs\": {\n          \"showIcon\": true\n        },\n        \"style\": \"margin-bottom: 16px\"\n      }, [h(\"template\", {\n        \"slot\": \"message\"\n      }, [h(\"span\", {\n        \"style\": \"margin-right: 12px\"\n      }, [\"\\u5DF2\\u9009\\u62E9: \", h(\"a\", {\n        \"style\": \"font-weight: 600\"\n      }, [this.selectedRows.length])]), needTotalItems, clearItem])]);\n    }\n  },\n  render: function render() {\n    var _this3 = this;\n\n    var h = arguments[0];\n    var props = {};\n\n    var localKeys = _Object$keys(this.$data);\n\n    var showAlert = _typeof(this.alert) === 'object' && this.alert !== null && this.alert.show && typeof this.rowSelection.selectedRowKeys !== 'undefined' || this.alert;\n\n    _Object$keys(T.props).forEach(function (k) {\n      var localKey = \"local\".concat(k.substring(0, 1).toUpperCase()).concat(k.substring(1));\n\n      if (localKeys.includes(localKey)) {\n        props[k] = _this3[localKey];\n        return props[k];\n      }\n\n      if (k === 'rowSelection') {\n        if (showAlert && _this3.rowSelection) {\n          // 如果需要使用alert，则重新绑定 rowSelection 事件\n          props[k] = {\n            selectedRows: _this3.selectedRows,\n            selectedRowKeys: _this3.selectedRowKeys,\n            onChange: function onChange(selectedRowKeys, selectedRows) {\n              _this3.updateSelect(selectedRowKeys, selectedRows);\n\n              typeof _this3[k].onChange !== 'undefined' && _this3[k].onChange(selectedRowKeys, selectedRows);\n            }\n          };\n          return props[k];\n        } else if (!_this3.rowSelection) {\n          // 如果没打算开启 rowSelection 则清空默认的选择项\n          props[k] = null;\n          return props[k];\n        }\n      }\n\n      _this3[k] && (props[k] = _this3[k]);\n      return props[k];\n    });\n\n    var table = h(\"a-table\", _mergeJSXProps([{}, {\n      props: props,\n      scopedSlots: _objectSpread({}, this.$scopedSlots)\n    }, {\n      \"on\": {\n        \"change\": this.loadData\n      }\n    }]), [_Object$keys(this.$slots).map(function (name) {\n      return h(\"template\", {\n        \"slot\": name\n      }, [_this3.$slots[name]]);\n    })]);\n    return h(\"div\", {\n      \"class\": \"table-wrapper\"\n    }, [showAlert ? this.renderAlert() : null, table]);\n  }\n};",{"version":3,"sources":["C:\\Users\\elk\\Documents\\GitHub\\exam-vue\\exam-portal\\src\\components\\Table\\index.js"],"names":["T","get","data","needTotalList","selectedRows","selectedRowKeys","localLoading","localDataSource","localPagination","pagination","props","rowKey","type","String","Function","default","required","pageNum","Number","pageSize","showSizeChanger","Boolean","size","alert","Object","rowSelection","showAlertInfo","showPagination","pageURI","watch","val","$router","push","$route","name","params","pageNo","current","created","localPageNum","includes","initTotalList","columns","loadData","methods","refresh","bool","filters","sorter","parameter","field","sortField","order","sortOrder","result","then","r","total","totalCount","length","hideOnSinglePage","totalList","Array","forEach","column","needTotal","updateSelect","list","map","item","reduce","sum","dataIndex","isNaN","clearSelected","onChange","renderClear","callback","renderAlert","needTotalItems","title","customRender","clearItem","clear","render","localKeys","$data","showAlert","show","k","localKey","substring","toUpperCase","table","scopedSlots","$scopedSlots","$slots"],"mappings":"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","sourcesContent":["import T from 'ant-design-vue/es/table/Table'\r\nimport get from 'lodash.get'\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      needTotalList: [],\r\n\r\n      selectedRows: [],\r\n      selectedRowKeys: [],\r\n\r\n      localLoading: false,\r\n      localDataSource: [],\r\n      localPagination: Object.assign({}, this.pagination)\r\n    }\r\n  },\r\n  props: Object.assign({}, T.props, {\r\n    rowKey: {\r\n      type: [String, Function],\r\n      default: 'key'\r\n    },\r\n    data: {\r\n      type: Function,\r\n      required: true\r\n    },\r\n    pageNum: {\r\n      type: Number,\r\n      default: 1\r\n    },\r\n    pageSize: {\r\n      type: Number,\r\n      default: 10\r\n    },\r\n    showSizeChanger: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    size: {\r\n      type: String,\r\n      default: 'default'\r\n    },\r\n    /**\r\n     * alert: {\r\n     *   show: true,\r\n     *   clear: Function\r\n     * }\r\n     */\r\n    alert: {\r\n      type: [Object, Boolean],\r\n      default: null\r\n    },\r\n    rowSelection: {\r\n      type: Object,\r\n      default: null\r\n    },\r\n    /** @Deprecated */\r\n    showAlertInfo: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    showPagination: {\r\n      type: String | Boolean,\r\n      default: 'auto'\r\n    },\r\n    /**\r\n     * enable page URI mode\r\n     *\r\n     * e.g:\r\n     * /users/1\r\n     * /users/2\r\n     * /users/3?queryParam=test\r\n     * ...\r\n     */\r\n    pageURI: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  }),\r\n  watch: {\r\n    'localPagination.current' (val) {\r\n      this.pageURI && this.$router.push({\r\n        ...this.$route,\r\n        name: this.$route.name,\r\n        params: Object.assign({}, this.$route.params, {\r\n          pageNo: val\r\n        })\r\n      })\r\n    },\r\n    pageNum (val) {\r\n      Object.assign(this.localPagination, {\r\n        current: val\r\n      })\r\n    },\r\n    pageSize (val) {\r\n      Object.assign(this.localPagination, {\r\n        pageSize: val\r\n      })\r\n    },\r\n    showSizeChanger (val) {\r\n      Object.assign(this.localPagination, {\r\n        showSizeChanger: val\r\n      })\r\n    }\r\n  },\r\n  created () {\r\n    const { pageNo } = this.$route.params\r\n    const localPageNum = this.pageURI && (pageNo && parseInt(pageNo)) || this.pageNum\r\n    this.localPagination = ['auto', true].includes(this.showPagination) && Object.assign({}, this.localPagination, {\r\n      current: localPageNum,\r\n      pageSize: this.pageSize,\r\n      showSizeChanger: this.showSizeChanger\r\n    })\r\n    this.needTotalList = this.initTotalList(this.columns)\r\n    this.loadData()\r\n  },\r\n  methods: {\r\n    /**\r\n     * 表格重新加载方法\r\n     * 如果参数为 true, 则强制刷新到第一页\r\n     * @param Boolean bool\r\n     */\r\n    refresh (bool = false) {\r\n      bool && (this.localPagination = Object.assign({}, {\r\n        current: 1, pageSize: this.pageSize\r\n      }))\r\n      this.loadData()\r\n    },\r\n    /**\r\n     * 加载数据方法\r\n     * @param {Object} pagination 分页选项器\r\n     * @param {Object} filters 过滤条件\r\n     * @param {Object} sorter 排序条件\r\n     */\r\n    loadData (pagination, filters, sorter) {\r\n      this.localLoading = true\r\n      const parameter = Object.assign({\r\n        pageNo: (pagination && pagination.current) ||\r\n            this.localPagination.current || this.pageNum,\r\n        pageSize: (pagination && pagination.pageSize) ||\r\n            this.localPagination.pageSize || this.pageSize\r\n      },\r\n      (sorter && sorter.field && {\r\n        sortField: sorter.field\r\n      }) || {},\r\n      (sorter && sorter.order && {\r\n        sortOrder: sorter.order\r\n      }) || {}, {\r\n        ...filters\r\n      }\r\n      )\r\n      const result = this.data(parameter)\r\n      // 对接自己的通用数据接口需要修改下方代码中的 r.pageNo, r.totalCount, r.data\r\n      // eslint-disable-next-line\r\n      if ((typeof result === 'object' || typeof result === 'function') && typeof result.then === 'function') {\r\n        result.then(r => {\r\n          this.localPagination = Object.assign({}, this.localPagination, {\r\n            current: r.pageNo, // 返回结果中的当前分页数\r\n            total: r.totalCount, // 返回结果中的总记录数\r\n            showSizeChanger: this.showSizeChanger,\r\n            pageSize: (pagination && pagination.pageSize) ||\r\n              this.localPagination.pageSize\r\n          })\r\n          // 为防止删除数据后导致页面当前页面数据长度为 0 ,自动翻页到上一页\r\n          if (r.data.length === 0 && this.localPagination.current > 1) {\r\n            this.localPagination.current--\r\n            this.loadData()\r\n            return\r\n          }\r\n\r\n          // 这里用于判断接口是否有返回 r.totalCount 或 this.showPagination = false\r\n          // 当情况满足时，表示数据不满足分页大小，关闭 table 分页功能\r\n\r\n          (!this.showPagination || !r.totalCount && this.showPagination === 'auto') && (this.localPagination.hideOnSinglePage = true)\r\n          this.localDataSource = r.data // 返回结果中的数组数据\r\n          this.localLoading = false\r\n        })\r\n      }\r\n    },\r\n    initTotalList (columns) {\r\n      const totalList = []\r\n      columns && columns instanceof Array && columns.forEach(column => {\r\n        if (column.needTotal) {\r\n          totalList.push({\r\n            ...column,\r\n            total: 0\r\n          })\r\n        }\r\n      })\r\n      return totalList\r\n    },\r\n    /**\r\n     * 用于更新已选中的列表数据 total 统计\r\n     * @param selectedRowKeys\r\n     * @param selectedRows\r\n     */\r\n    updateSelect (selectedRowKeys, selectedRows) {\r\n      this.selectedRows = selectedRows\r\n      this.selectedRowKeys = selectedRowKeys\r\n      const list = this.needTotalList\r\n      this.needTotalList = list.map(item => {\r\n        return {\r\n          ...item,\r\n          total: selectedRows.reduce((sum, val) => {\r\n            const total = sum + parseInt(get(val, item.dataIndex))\r\n            return isNaN(total) ? 0 : total\r\n          }, 0)\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * 清空 table 已选中项\r\n     */\r\n    clearSelected () {\r\n      if (this.rowSelection) {\r\n        this.rowSelection.onChange([], [])\r\n        this.updateSelect([], [])\r\n      }\r\n    },\r\n    /**\r\n     * 处理交给 table 使用者去处理 clear 事件时，内部选中统计同时调用\r\n     * @param callback\r\n     * @returns {*}\r\n     */\r\n    renderClear (callback) {\r\n      if (this.selectedRowKeys.length <= 0) return null\r\n      return (\r\n        <a style=\"margin-left: 24px\" onClick={() => {\r\n          callback()\r\n          this.clearSelected()\r\n        }}>清空</a>\r\n      )\r\n    },\r\n    renderAlert () {\r\n      // 绘制统计列数据\r\n      const needTotalItems = this.needTotalList.map((item) => {\r\n        return (<span style=\"margin-right: 12px\">\r\n          {item.title}总计 <a style=\"font-weight: 600\">{!item.customRender ? item.total : item.customRender(item.total)}</a>\r\n        </span>)\r\n      })\r\n\r\n      // 绘制 清空 按钮\r\n      const clearItem = (typeof this.alert.clear === 'boolean' && this.alert.clear) ? (\r\n        this.renderClear(this.clearSelected)\r\n      ) : (this.alert !== null && typeof this.alert.clear === 'function') ? (\r\n        this.renderClear(this.alert.clear)\r\n      ) : null\r\n\r\n      // 绘制 alert 组件\r\n      return (\r\n        <a-alert showIcon={true} style=\"margin-bottom: 16px\">\r\n          <template slot=\"message\">\r\n            <span style=\"margin-right: 12px\">已选择: <a style=\"font-weight: 600\">{this.selectedRows.length}</a></span>\r\n            {needTotalItems}\r\n            {clearItem}\r\n          </template>\r\n        </a-alert>\r\n      )\r\n    }\r\n  },\r\n\r\n  render () {\r\n    const props = {}\r\n    const localKeys = Object.keys(this.$data)\r\n    const showAlert = (typeof this.alert === 'object' && this.alert !== null && this.alert.show) && typeof this.rowSelection.selectedRowKeys !== 'undefined' || this.alert\r\n\r\n    Object.keys(T.props).forEach(k => {\r\n      const localKey = `local${k.substring(0, 1).toUpperCase()}${k.substring(1)}`\r\n      if (localKeys.includes(localKey)) {\r\n        props[k] = this[localKey]\r\n        return props[k]\r\n      }\r\n      if (k === 'rowSelection') {\r\n        if (showAlert && this.rowSelection) {\r\n          // 如果需要使用alert，则重新绑定 rowSelection 事件\r\n          props[k] = {\r\n            selectedRows: this.selectedRows,\r\n            selectedRowKeys: this.selectedRowKeys,\r\n            onChange: (selectedRowKeys, selectedRows) => {\r\n              this.updateSelect(selectedRowKeys, selectedRows)\r\n              typeof this[k].onChange !== 'undefined' && this[k].onChange(selectedRowKeys, selectedRows)\r\n            }\r\n          }\r\n          return props[k]\r\n        } else if (!this.rowSelection) {\r\n          // 如果没打算开启 rowSelection 则清空默认的选择项\r\n          props[k] = null\r\n          return props[k]\r\n        }\r\n      }\r\n      this[k] && (props[k] = this[k])\r\n      return props[k]\r\n    })\r\n    const table = (\r\n      <a-table {...{ props, scopedSlots: { ...this.$scopedSlots } }} onChange={this.loadData}>\r\n        { Object.keys(this.$slots).map(name => (<template slot={name}>{this.$slots[name]}</template>)) }\r\n      </a-table>\r\n    )\r\n\r\n    return (\r\n      <div class=\"table-wrapper\">\r\n        { showAlert ? this.renderAlert() : null }\r\n        { table }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]}]}