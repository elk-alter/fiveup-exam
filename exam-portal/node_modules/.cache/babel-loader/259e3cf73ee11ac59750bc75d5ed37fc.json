{"remainingRequest":"C:\\Users\\elk\\Desktop\\exam-portal\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\elk\\Desktop\\exam-portal\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\elk\\Desktop\\exam-portal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\elk\\Desktop\\exam-portal\\src\\views\\test\\BootStrapTableDemo.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\elk\\Desktop\\exam-portal\\src\\views\\test\\BootStrapTableDemo.vue","mtime":1617959933273},{"path":"C:\\Users\\elk\\Desktop\\exam-portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1617960720798},{"path":"C:\\Users\\elk\\Desktop\\exam-portal\\node_modules\\babel-loader\\lib\\index.js","mtime":1617960693405},{"path":"C:\\Users\\elk\\Desktop\\exam-portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1617960720798},{"path":"C:\\Users\\elk\\Desktop\\exam-portal\\node_modules\\vue-loader\\lib\\index.js","mtime":1617960721218}],"contextDependencies":[],"result":["import _JSON$stringify from \"C:\\\\Users\\\\elk\\\\Desktop\\\\exam-portal\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport '../../plugins/bootstrap-table';\nimport $ from 'jquery';\nexport default {\n  data: function data() {\n    var that = this; // 方便在bootstrap-table中引用methods\n\n    return {\n      columns: [{\n        field: 'state',\n        checkbox: true\n      }, {\n        title: 'Item ID',\n        field: 'id'\n      }, {\n        field: 'name',\n        title: 'Item Name'\n      }, {\n        field: 'price',\n        title: 'Item Price'\n      }, {\n        field: 'actions',\n        title: 'Actions',\n        align: 'center',\n        formatter: function formatter(value, row) {\n          return '<button type=\"button\" class=\"btn btn-success mybtn\">Success</button>';\n        },\n        events: {\n          'click .mybtn': function clickMybtn(e, value, row, index) {\n            // 双击是dblclick\n            that.clickRow(row, value, index);\n          }\n        }\n      }],\n      data: {\n        total: 5,\n        rows: [{\n          id: 1,\n          name: 'Item 1',\n          price: '$1'\n        }, {\n          id: 2,\n          name: 'Item 2',\n          price: '$2'\n        }, {\n          id: 3,\n          name: 'Item 3',\n          price: '$3'\n        }, {\n          id: 4,\n          name: 'Item 4',\n          price: '$4'\n        }, {\n          id: 5,\n          name: 'Item 5',\n          price: '$5'\n        }]\n      },\n      options: {\n        search: true,\n        showColumns: true,\n        showExport: true,\n        showRefresh: true,\n        // 下面两行是支持高级搜索，即按照字段搜索\n        advancedSearch: true,\n        idTable: 'advancedTable',\n        // 下面是常用的事件，更多的点击事件可以参考：http://www.itxst.com/bootstrap-table-events/tutorial.html\n        // onClickRow: that.clickRow,\n        // onClickCell: that.clickCell, // 单元格单击事件\n        onDblClickCell: that.dblClickCell // 单元格双击事件\n\n      }\n    };\n  },\n  methods: {\n    clickRow: function clickRow(row, value, index) {\n      alert(_JSON$stringify(row) + ', ' + index);\n    },\n    clickCell: function clickCell(field, value, row, $element) {\n      alert(_JSON$stringify(field));\n    },\n\n    /**\r\n     * 单元格双击事件\r\n     * @param field 字段名，如id、name、price等\r\n     * @param value 字段值 如Item 1、$1等\r\n     * @param row 一行的值，如{\"id\":3,\"name\":\"Item 3\",\"price\":\"$3\"}\r\n     * @param $element 行所在的dom元素，可以动态往里面加入页面元素，比如双击可编辑或者弹出富文本框等\r\n     */\n    dblClickCell: function dblClickCell(field, value, row, $element) {\n      console.log($element.text()); // 获取元素的值\n\n      console.log($element.html()); // 获取页面元素的值\n\n      var p = $('<p>弹框出现前修改内容</p>');\n      $element.append(p);\n      console.log($element.text()); // 获取元素的值\n\n      row[field] = $element.text(); // 更新行的值\n\n      alert(field + ':' + row + ', ' + _JSON$stringify(row));\n      var index = $element.parent().attr('data-index'); // 获取当前行的数据的id，方便更新data中的rows数组\n\n      row[field] = '弹框出现后修改内容';\n      this.data.rows[index] = row;\n\n      this.$refs.table._initTable(); // 直接看源码找出这么个重新渲染表格的事件\n\n    }\n  }\n};",{"version":3,"sources":["BootStrapTableDemo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <BootstrapTable\r\n      ref=\"table\"\r\n      :columns=\"columns\"\r\n      :data=\"data\"\r\n      :options=\"options\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport '../../plugins/bootstrap-table'\r\nimport $ from 'jquery'\r\n\r\nexport default {\r\n  data () {\r\n    const that = this // 方便在bootstrap-table中引用methods\r\n    return {\r\n      columns: [\r\n        {\r\n          field: 'state',\r\n          checkbox: true\r\n        },\r\n        {\r\n          title: 'Item ID',\r\n          field: 'id'\r\n        },\r\n        {\r\n          field: 'name',\r\n          title: 'Item Name'\r\n        },\r\n        {\r\n          field: 'price',\r\n          title: 'Item Price'\r\n        },\r\n        {\r\n          field: 'actions',\r\n          title: 'Actions',\r\n          align: 'center',\r\n          formatter: (value, row) => {\r\n            return '<button type=\"button\" class=\"btn btn-success mybtn\">Success</button>'\r\n          },\r\n          events: {\r\n            'click .mybtn': function (e, value, row, index) { // 双击是dblclick\r\n              that.clickRow(row, value, index)\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      data: {\r\n        total: 5,\r\n        rows: [\r\n          {\r\n            id: 1,\r\n            name: 'Item 1',\r\n            price: '$1'\r\n          },\r\n          {\r\n            id: 2,\r\n            name: 'Item 2',\r\n            price: '$2'\r\n          },\r\n          {\r\n            id: 3,\r\n            name: 'Item 3',\r\n            price: '$3'\r\n          },\r\n          {\r\n            id: 4,\r\n            name: 'Item 4',\r\n            price: '$4'\r\n          },\r\n          {\r\n            id: 5,\r\n            name: 'Item 5',\r\n            price: '$5'\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        search: true,\r\n        showColumns: true,\r\n        showExport: true,\r\n        showRefresh: true,\r\n        // 下面两行是支持高级搜索，即按照字段搜索\r\n        advancedSearch: true,\r\n        idTable: 'advancedTable',\r\n        // 下面是常用的事件，更多的点击事件可以参考：http://www.itxst.com/bootstrap-table-events/tutorial.html\r\n        // onClickRow: that.clickRow,\r\n        // onClickCell: that.clickCell, // 单元格单击事件\r\n        onDblClickCell: that.dblClickCell // 单元格双击事件\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    clickRow (row, value, index) {\r\n      alert(JSON.stringify(row) + ', ' + index)\r\n    },\r\n    clickCell (field, value, row, $element) {\r\n      alert(JSON.stringify(field))\r\n    },\r\n    /**\r\n     * 单元格双击事件\r\n     * @param field 字段名，如id、name、price等\r\n     * @param value 字段值 如Item 1、$1等\r\n     * @param row 一行的值，如{\"id\":3,\"name\":\"Item 3\",\"price\":\"$3\"}\r\n     * @param $element 行所在的dom元素，可以动态往里面加入页面元素，比如双击可编辑或者弹出富文本框等\r\n     */\r\n    dblClickCell (field, value, row, $element) {\r\n      console.log($element.text()) // 获取元素的值\r\n      console.log($element.html()) // 获取页面元素的值\r\n      const p = $('<p>弹框出现前修改内容</p>')\r\n      $element.append(p)\r\n      console.log($element.text()) // 获取元素的值\r\n      row[field] = $element.text() // 更新行的值\r\n      alert(field + ':' + row + ', ' + JSON.stringify(row))\r\n      const index = $element.parent().attr('data-index') // 获取当前行的数据的id，方便更新data中的rows数组\r\n      row[field] = '弹框出现后修改内容'\r\n      this.data.rows[index] = row\r\n      this.$refs.table._initTable() // 直接看源码找出这么个重新渲染表格的事件\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/test"}]}