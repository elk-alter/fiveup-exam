{"remainingRequest":"C:\\Users\\elk\\Documents\\GitHub\\exam-vue\\exam-portal\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\elk\\Documents\\GitHub\\exam-vue\\exam-portal\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\elk\\Documents\\GitHub\\exam-vue\\exam-portal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\elk\\Documents\\GitHub\\exam-vue\\exam-portal\\src\\views\\list\\modules\\QuestionEditModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\elk\\Documents\\GitHub\\exam-vue\\exam-portal\\src\\views\\list\\modules\\QuestionEditModal.vue","mtime":1617959933269},{"path":"C:\\Users\\elk\\Documents\\GitHub\\exam-vue\\exam-portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1617960720798},{"path":"C:\\Users\\elk\\Documents\\GitHub\\exam-vue\\exam-portal\\node_modules\\babel-loader\\lib\\index.js","mtime":1617960693405},{"path":"C:\\Users\\elk\\Documents\\GitHub\\exam-vue\\exam-portal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1617960720798},{"path":"C:\\Users\\elk\\Documents\\GitHub\\exam-vue\\exam-portal\\node_modules\\vue-loader\\lib\\index.js","mtime":1617960721218}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport '../../../plugins/summernote';\nimport $ from 'jquery';\nimport { questionUpdate } from '../../../api/exam';\nexport default {\n  // 问题查看的弹出框，用于查看问题/修改问题\n  name: 'QuestionEditModal',\n  data: function data() {\n    return {\n      visible: false,\n      size: 'default',\n      confirmLoading: false,\n      form: this.$form.createForm(this),\n      // 每个问题\n      question: {},\n      // 单选和判断题的答案\n      answerOptionId: '',\n      // 多选题的答案\n      answerOptionIds: [],\n      radioStyle: {\n        display: 'block',\n        height: '30px',\n        lineHeight: '30px'\n      },\n      name: '',\n      desc: ''\n    };\n  },\n  updated: function updated() {\n    this.initSummernote('summernote-question-name-edit');\n    this.initSummernote('summernote-question-desc-edit');\n    this.setSummernoteContent('summernote-question-name-edit', this.name);\n    this.setSummernoteContent('summernote-question-desc-edit', this.desc);\n  },\n  methods: {\n    initSummernote: function initSummernote(divId) {\n      console.log('初始化富文本插件：' + divId);\n      $('#' + divId).summernote({\n        lang: 'zh-CN',\n        placeholder: '请输入内容',\n        height: 200,\n        width: '100%',\n        htmlMode: true,\n        toolbar: [['style', ['bold', 'italic', 'underline', 'clear']], ['fontsize', ['fontsize']], ['fontname', ['fontname']], ['para', ['ul', 'ol', 'paragraph']]],\n        fontSizes: ['8', '9', '10', '11', '12', '14', '18', '24', '36'],\n        fontNames: ['Arial', 'Arial Black', 'Comic Sans MS', 'Courier New', 'Helvetica Neue', 'Helvetica', 'Impact', 'Lucida Grande', 'Tahoma', 'Times New Roman', 'Verdana'],\n        callbacks: {\n          onSubmit: function onSubmit() {\n            this.richContent = $('#summernote').summernote('code');\n          }\n        }\n      });\n    },\n    getSummernoteContent: function getSummernoteContent(divId) {\n      return $('#' + divId).summernote('code');\n    },\n    setSummernoteContent: function setSummernoteContent(divId, content) {\n      return $('#' + divId).summernote('code', content);\n    },\n    edit: function edit(record) {\n      this.name = record.name; // 题干\n\n      this.desc = record.description; // 解析\n      // 把当前的记录赋值到data中的变量\n\n      this.question = record; // 上来先把之前的清理干净\n\n      this.answerOptionId = '';\n      this.answerOptionIds = [];\n      this.visible = true; // 单选题的处理情况,设置默认值\n\n      for (var i = 0; i < this.question.options.length; i++) {\n        if (this.question.options[i].answer === true) {\n          // 设置单选题或者判断题答案\n          this.answerOptionId = this.question.options[i].id; // 设置多选题的答案\n\n          this.answerOptionIds.push(this.question.options[i].id);\n        }\n      }\n    },\n    handleCancel: function handleCancel() {\n      // clear form & currentStep\n      this.visible = false;\n    },\n    handleSingleChange: function handleSingleChange(value) {\n      // 单选题的处理情况\n      for (var i = 0; i < this.question.options.length; i++) {\n        if (this.question.options[i].id === value) {\n          // 更新唯一的正确答案\n          this.question.options[i].answer = true; // 设置答案的内容\n\n          this.answerOptionId = this.question.options[i].id;\n        } else {\n          // id不和答案相同地就设置为false，这样可以保证只有一个正确答案\n          this.question.options[i].answer = false;\n        }\n      }\n\n      console.log(\"Selected: \".concat(value));\n    },\n    handleMultiChange: function handleMultiChange(values) {\n      console.log(values); // 直接更新选项id的数组\n\n      this.answerOptionIds = values; // 更新question中options的answer位置\n\n      for (var i = 0; i < this.question.options.length; i++) {\n        // 遍历所有的题目的选项\n        // 取出一个选项的id\n        var id = this.question.options[i].id;\n        var isAnswer = false;\n\n        for (var j = 0; j < values.length; j++) {\n          // 拿着\n          var value = values[j];\n\n          if (id === value) {\n            // 说明这个选项是答案，设置为是答案，直接退出\n            isAnswer = true;\n            this.question.options[i].answer = true;\n            break; // 跳出内部的for循环\n          }\n        } // 这个选项遍历到最后，发现还不是答案(不在答案数组中)，那么就把这个选项的answer属性设置为false\n\n\n        if (isAnswer === false) {\n          this.question.options[i].answer = false;\n        }\n      }\n    },\n    popupScroll: function popupScroll() {\n      console.log('popupScroll');\n    },\n    handleUpdate: function handleUpdate() {\n      var that = this;\n      that.question.name = that.getSummernoteContent('summernote-question-name-edit');\n      that.question.description = that.getSummernoteContent('summernote-question-desc-edit');\n      console.log(that.question); // 把data中的question属性提交到后端，待写完后端接口\n\n      questionUpdate(that.question).then(function (res) {\n        // 成功就跳转到结果页面\n        console.log(res);\n\n        if (res.code === 0) {\n          that.$notification.success({\n            message: '更新成功',\n            description: '问题更新成功'\n          }); // 关闭弹出框\n\n          that.visible = false;\n          that.$emit('ok');\n        }\n      }).catch(function (err) {\n        // 失败就弹出警告消息\n        that.$notification.error({\n          message: '更新',\n          description: err.message\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["QuestionEditModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA,OAAA,6BAAA;AACA,OAAA,CAAA,MAAA,QAAA;AACA,SAAA,cAAA,QAAA,mBAAA;AAEA,eAAA;AACA;AACA,EAAA,IAAA,EAAA,mBAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA,SAFA;AAGA,MAAA,cAAA,EAAA,KAHA;AAKA,MAAA,IAAA,EAAA,KAAA,KAAA,CAAA,UAAA,CAAA,IAAA,CALA;AAMA;AACA,MAAA,QAAA,EAAA,EAPA;AAQA;AACA,MAAA,cAAA,EAAA,EATA;AAUA;AACA,MAAA,eAAA,EAAA,EAXA;AAYA,MAAA,UAAA,EAAA;AACA,QAAA,OAAA,EAAA,OADA;AAEA,QAAA,MAAA,EAAA,MAFA;AAGA,QAAA,UAAA,EAAA;AAHA,OAZA;AAiBA,MAAA,IAAA,EAAA,EAjBA;AAkBA,MAAA,IAAA,EAAA;AAlBA,KAAA;AAoBA,GAxBA;AA0BA,EAAA,OA1BA,qBA0BA;AACA,SAAA,cAAA,CAAA,+BAAA;AACA,SAAA,cAAA,CAAA,+BAAA;AACA,SAAA,oBAAA,CAAA,+BAAA,EAAA,KAAA,IAAA;AACA,SAAA,oBAAA,CAAA,+BAAA,EAAA,KAAA,IAAA;AACA,GA/BA;AAgCA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,0BACA,KADA,EACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,cAAA,KAAA;AACA,MAAA,CAAA,CAAA,MAAA,KAAA,CAAA,CAAA,UAAA,CAAA;AACA,QAAA,IAAA,EAAA,OADA;AAEA,QAAA,WAAA,EAAA,OAFA;AAGA,QAAA,MAAA,EAAA,GAHA;AAIA,QAAA,KAAA,EAAA,MAJA;AAKA,QAAA,QAAA,EAAA,IALA;AAMA,QAAA,OAAA,EAAA,CACA,CAAA,OAAA,EAAA,CAAA,MAAA,EAAA,QAAA,EAAA,WAAA,EAAA,OAAA,CAAA,CADA,EAEA,CAAA,UAAA,EAAA,CAAA,UAAA,CAAA,CAFA,EAGA,CAAA,UAAA,EAAA,CAAA,UAAA,CAAA,CAHA,EAIA,CAAA,MAAA,EAAA,CAAA,IAAA,EAAA,IAAA,EAAA,WAAA,CAAA,CAJA,CANA;AAYA,QAAA,SAAA,EAAA,CAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,CAZA;AAaA,QAAA,SAAA,EAAA,CACA,OADA,EACA,aADA,EACA,eADA,EACA,aADA,EAEA,gBAFA,EAEA,WAFA,EAEA,QAFA,EAEA,eAFA,EAGA,QAHA,EAGA,iBAHA,EAGA,SAHA,CAbA;AAkBA,QAAA,SAAA,EAAA;AACA,UAAA,QAAA,EAAA,oBAAA;AACA,iBAAA,WAAA,GAAA,CAAA,CAAA,aAAA,CAAA,CAAA,UAAA,CAAA,MAAA,CAAA;AACA;AAHA;AAlBA,OAAA;AAwBA,KA3BA;AA4BA,IAAA,oBA5BA,gCA4BA,KA5BA,EA4BA;AACA,aAAA,CAAA,CAAA,MAAA,KAAA,CAAA,CAAA,UAAA,CAAA,MAAA,CAAA;AACA,KA9BA;AA+BA,IAAA,oBA/BA,gCA+BA,KA/BA,EA+BA,OA/BA,EA+BA;AACA,aAAA,CAAA,CAAA,MAAA,KAAA,CAAA,CAAA,UAAA,CAAA,MAAA,EAAA,OAAA,CAAA;AACA,KAjCA;AAkCA,IAAA,IAlCA,gBAkCA,MAlCA,EAkCA;AACA,WAAA,IAAA,GAAA,MAAA,CAAA,IAAA,CADA,CACA;;AACA,WAAA,IAAA,GAAA,MAAA,CAAA,WAAA,CAFA,CAEA;AACA;;AACA,WAAA,QAAA,GAAA,MAAA,CAJA,CAKA;;AACA,WAAA,cAAA,GAAA,EAAA;AACA,WAAA,eAAA,GAAA,EAAA;AACA,WAAA,OAAA,GAAA,IAAA,CARA,CASA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,QAAA,CAAA,OAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,KAAA,QAAA,CAAA,OAAA,CAAA,CAAA,EAAA,MAAA,KAAA,IAAA,EAAA;AACA;AACA,eAAA,cAAA,GAAA,KAAA,QAAA,CAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAFA,CAGA;;AACA,eAAA,eAAA,CAAA,IAAA,CAAA,KAAA,QAAA,CAAA,OAAA,CAAA,CAAA,EAAA,EAAA;AACA;AACA;AACA,KApDA;AAsDA,IAAA,YAtDA,0BAsDA;AACA;AACA,WAAA,OAAA,GAAA,KAAA;AACA,KAzDA;AA2DA,IAAA,kBA3DA,8BA2DA,KA3DA,EA2DA;AACA;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,QAAA,CAAA,OAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,KAAA,QAAA,CAAA,OAAA,CAAA,CAAA,EAAA,EAAA,KAAA,KAAA,EAAA;AACA;AACA,eAAA,QAAA,CAAA,OAAA,CAAA,CAAA,EAAA,MAAA,GAAA,IAAA,CAFA,CAGA;;AACA,eAAA,cAAA,GAAA,KAAA,QAAA,CAAA,OAAA,CAAA,CAAA,EAAA,EAAA;AACA,SALA,MAKA;AACA;AACA,eAAA,QAAA,CAAA,OAAA,CAAA,CAAA,EAAA,MAAA,GAAA,KAAA;AACA;AACA;;AACA,MAAA,OAAA,CAAA,GAAA,qBAAA,KAAA;AACA,KAzEA;AA2EA,IAAA,iBA3EA,6BA2EA,MA3EA,EA2EA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,MAAA,EADA,CAEA;;AACA,WAAA,eAAA,GAAA,MAAA,CAHA,CAIA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,QAAA,CAAA,OAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AAAA;AACA;AACA,YAAA,EAAA,GAAA,KAAA,QAAA,CAAA,OAAA,CAAA,CAAA,EAAA,EAAA;AACA,YAAA,QAAA,GAAA,KAAA;;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,MAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AAAA;AACA,cAAA,KAAA,GAAA,MAAA,CAAA,CAAA,CAAA;;AACA,cAAA,EAAA,KAAA,KAAA,EAAA;AACA;AACA,YAAA,QAAA,GAAA,IAAA;AACA,iBAAA,QAAA,CAAA,OAAA,CAAA,CAAA,EAAA,MAAA,GAAA,IAAA;AACA,kBAJA,CAIA;AACA;AACA,SAZA,CAaA;;;AACA,YAAA,QAAA,KAAA,KAAA,EAAA;AACA,eAAA,QAAA,CAAA,OAAA,CAAA,CAAA,EAAA,MAAA,GAAA,KAAA;AACA;AACA;AACA,KAlGA;AAoGA,IAAA,WApGA,yBAoGA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,aAAA;AACA,KAtGA;AAwGA,IAAA,YAxGA,0BAwGA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,MAAA,IAAA,CAAA,QAAA,CAAA,IAAA,GAAA,IAAA,CAAA,oBAAA,CAAA,+BAAA,CAAA;AACA,MAAA,IAAA,CAAA,QAAA,CAAA,WAAA,GAAA,IAAA,CAAA,oBAAA,CAAA,+BAAA,CAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,QAAA,EAJA,CAKA;;AACA,MAAA,cAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,GAAA;;AACA,YAAA,GAAA,CAAA,IAAA,KAAA,CAAA,EAAA;AACA,UAAA,IAAA,CAAA,aAAA,CAAA,OAAA,CAAA;AACA,YAAA,OAAA,EAAA,MADA;AAEA,YAAA,WAAA,EAAA;AAFA,WAAA,EADA,CAKA;;AACA,UAAA,IAAA,CAAA,OAAA,GAAA,KAAA;AACA,UAAA,IAAA,CAAA,KAAA,CAAA,IAAA;AACA;AACA,OAZA,EAYA,KAZA,CAYA,UAAA,GAAA,EAAA;AACA;AACA,QAAA,IAAA,CAAA,aAAA,CAAA,KAAA,CAAA;AACA,UAAA,OAAA,EAAA,IADA;AAEA,UAAA,WAAA,EAAA,GAAA,CAAA;AAFA,SAAA;AAIA,OAlBA;AAmBA;AAjIA;AAhCA,CAAA","sourcesContent":["<template>\r\n  <a-modal title=\"编辑题目\" :width=\"640\" :visible=\"visible\" :confirmLoading=\"confirmLoading\" @cancel=\"handleCancel\">\r\n    <a-spin :spinning=\"confirmLoading\">\r\n      <a-form :form=\"form\">\r\n        <h3><b>题干：</b></h3>\r\n        <div id=\"summernote-question-name-edit\" />\r\n        <ul v-show=\"question.type==='多选题'\">\r\n          <li v-for=\"option in question.options\" :key=\"option.id\">\r\n            <a-input v-model=\"option.content\" />\r\n          </li>\r\n        </ul>\r\n\r\n        <ul v-show=\"question.type!=='多选题'\">\r\n          <li v-for=\"option in question.options\" :key=\"option.id\">\r\n            <a-input v-model=\"option.content\" />\r\n          </li>\r\n        </ul>\r\n\r\n        <h3><b>答案：</b></h3>\r\n        <ul v-show=\"question.type!=='多选题'\">\r\n          <li>\r\n            <a-select :size=\"size\" :value=\"answerOptionId\" style=\"width: 100%\" @change=\"handleSingleChange\">\r\n              <a-select-option v-for=\"option in question.options\" :key=\"option.id\">\r\n                {{ option.content }}\r\n              </a-select-option>\r\n            </a-select>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul v-show=\"question.type==='多选题'\">\r\n          <li>\r\n            <a-select\r\n              mode=\"multiple\"\r\n              :size=\"size\"\r\n              placeholder=\"Please select\"\r\n              :value=\"answerOptionIds\"\r\n              style=\"width: 100%\"\r\n              @change=\"handleMultiChange\"\r\n              @popupScroll=\"popupScroll\"\r\n            >\r\n              <a-select-option v-for=\"option in question.options\" :key=\"option.id\">\r\n                {{ option.content }}\r\n              </a-select-option>\r\n            </a-select>\r\n          </li>\r\n        </ul>\r\n        <h3><b>解析：</b></h3>\r\n        <div id=\"summernote-question-desc-edit\" />\r\n      </a-form>\r\n    </a-spin>\r\n    <template slot=\"footer\">\r\n      <a-button key=\"cancel\" @click=\"handleCancel\">关闭</a-button>\r\n      <a-button key=\"update\" type=\"primary\" @click=\"handleUpdate\">更新</a-button>\r\n    </template>\r\n  </a-modal>\r\n</template>\r\n\r\n<script>\r\nimport '../../../plugins/summernote'\r\nimport $ from 'jquery'\r\nimport { questionUpdate } from '../../../api/exam'\r\n\r\nexport default {\r\n  // 问题查看的弹出框，用于查看问题/修改问题\r\n  name: 'QuestionEditModal',\r\n  data () {\r\n    return {\r\n      visible: false,\r\n      size: 'default',\r\n      confirmLoading: false,\r\n\r\n      form: this.$form.createForm(this),\r\n      // 每个问题\r\n      question: {},\r\n      // 单选和判断题的答案\r\n      answerOptionId: '',\r\n      // 多选题的答案\r\n      answerOptionIds: [],\r\n      radioStyle: {\r\n        display: 'block',\r\n        height: '30px',\r\n        lineHeight: '30px'\r\n      },\r\n      name: '',\r\n      desc: ''\r\n    }\r\n  },\r\n\r\n  updated () {\r\n    this.initSummernote('summernote-question-name-edit')\r\n    this.initSummernote('summernote-question-desc-edit')\r\n    this.setSummernoteContent('summernote-question-name-edit', this.name)\r\n    this.setSummernoteContent('summernote-question-desc-edit', this.desc)\r\n  },\r\n  methods: {\r\n    initSummernote (divId) {\r\n      console.log('初始化富文本插件：' + divId)\r\n      $('#' + divId).summernote({\r\n        lang: 'zh-CN',\r\n        placeholder: '请输入内容',\r\n        height: 200,\r\n        width: '100%',\r\n        htmlMode: true,\r\n        toolbar: [\r\n          ['style', ['bold', 'italic', 'underline', 'clear']],\r\n          ['fontsize', ['fontsize']],\r\n          ['fontname', ['fontname']],\r\n          ['para', ['ul', 'ol', 'paragraph']]\r\n        ],\r\n        fontSizes: ['8', '9', '10', '11', '12', '14', '18', '24', '36'],\r\n        fontNames: [\r\n          'Arial', 'Arial Black', 'Comic Sans MS', 'Courier New',\r\n          'Helvetica Neue', 'Helvetica', 'Impact', 'Lucida Grande',\r\n          'Tahoma', 'Times New Roman', 'Verdana'\r\n        ],\r\n        callbacks: {\r\n          onSubmit: function () {\r\n            this.richContent = $('#summernote').summernote('code')\r\n          }\r\n        }\r\n      })\r\n    },\r\n    getSummernoteContent (divId) {\r\n      return $('#' + divId).summernote('code')\r\n    },\r\n    setSummernoteContent (divId, content) {\r\n      return $('#' + divId).summernote('code', content)\r\n    },\r\n    edit (record) {\r\n      this.name = record.name // 题干\r\n      this.desc = record.description // 解析\r\n      // 把当前的记录赋值到data中的变量\r\n      this.question = record\r\n      // 上来先把之前的清理干净\r\n      this.answerOptionId = ''\r\n      this.answerOptionIds = []\r\n      this.visible = true\r\n      // 单选题的处理情况,设置默认值\r\n      for (let i = 0; i < this.question.options.length; i++) {\r\n        if (this.question.options[i].answer === true) {\r\n          // 设置单选题或者判断题答案\r\n          this.answerOptionId = this.question.options[i].id\r\n          // 设置多选题的答案\r\n          this.answerOptionIds.push(this.question.options[i].id)\r\n        }\r\n      }\r\n    },\r\n\r\n    handleCancel () {\r\n      // clear form & currentStep\r\n      this.visible = false\r\n    },\r\n\r\n    handleSingleChange (value) {\r\n      // 单选题的处理情况\r\n      for (let i = 0; i < this.question.options.length; i++) {\r\n        if (this.question.options[i].id === value) {\r\n          // 更新唯一的正确答案\r\n          this.question.options[i].answer = true\r\n          // 设置答案的内容\r\n          this.answerOptionId = this.question.options[i].id\r\n        } else {\r\n          // id不和答案相同地就设置为false，这样可以保证只有一个正确答案\r\n          this.question.options[i].answer = false\r\n        }\r\n      }\r\n      console.log(`Selected: ${value}`)\r\n    },\r\n\r\n    handleMultiChange (values) {\r\n      console.log(values)\r\n      // 直接更新选项id的数组\r\n      this.answerOptionIds = values\r\n      // 更新question中options的answer位置\r\n      for (let i = 0; i < this.question.options.length; i++) { // 遍历所有的题目的选项\r\n        // 取出一个选项的id\r\n        const id = this.question.options[i].id\r\n        let isAnswer = false\r\n        for (let j = 0; j < values.length; j++) { // 拿着\r\n          const value = values[j]\r\n          if (id === value) {\r\n            // 说明这个选项是答案，设置为是答案，直接退出\r\n            isAnswer = true\r\n            this.question.options[i].answer = true\r\n            break // 跳出内部的for循环\r\n          }\r\n        }\r\n        // 这个选项遍历到最后，发现还不是答案(不在答案数组中)，那么就把这个选项的answer属性设置为false\r\n        if (isAnswer === false) {\r\n          this.question.options[i].answer = false\r\n        }\r\n      }\r\n    },\r\n\r\n    popupScroll () {\r\n      console.log('popupScroll')\r\n    },\r\n\r\n    handleUpdate () {\r\n      const that = this\r\n      that.question.name = that.getSummernoteContent('summernote-question-name-edit')\r\n      that.question.description = that.getSummernoteContent('summernote-question-desc-edit')\r\n      console.log(that.question)\r\n      // 把data中的question属性提交到后端，待写完后端接口\r\n      questionUpdate(that.question).then(res => {\r\n        // 成功就跳转到结果页面\r\n        console.log(res)\r\n        if (res.code === 0) {\r\n          that.$notification.success({\r\n            message: '更新成功',\r\n            description: '问题更新成功'\r\n          })\r\n          // 关闭弹出框\r\n          that.visible = false\r\n          that.$emit('ok')\r\n        }\r\n      }).catch(err => {\r\n        // 失败就弹出警告消息\r\n        that.$notification.error({\r\n          message: '更新',\r\n          description: err.message\r\n        })\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/list/modules"}]}